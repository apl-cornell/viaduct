host alice : {A & B<-}
host bob   : {B & A<-}

fun main() {
    val length: int{A ⊓ B} = 5;
    get_mins(length, val a_min, val b_min);
    f(a_min, b_min);
}

fun get_mins(length: int{A ⊓ B}, a: out int{A & B<-}, b: out int{B & A<-}) {
    var a_min: int{A & B<-} = 0;
    var b_min: int{B & A<-} = 0;
    for (var i: int{A ⊓ B} = 0; i < length; i += 1) {
        a_min = min(a_min, input int from alice);
        b_min = min(b_min, input int from bob);
    }
    out a = a_min;
    out b = b_min;
}

fun f(a_min: int{A & B<-}, b_min: int{B & A<-}) {
    val a_wins: bool{A ⊓ B} = declassify (a_min > b_min) to {A ⊓ B};
    output a_wins to alice;
    output a_wins to bob;
}

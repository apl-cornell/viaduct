fun exp{X, Y, Z}(a: int{X}, b: int{Y}, c: out int{Z}) where (X âŠ” Y <: Z) {
  val aa:
  exp(b-a, a, out c);
}

fun main() {
  val x : int{alice} = input int from alice;
  val y : int{bob} = input int from bob;
  exp(x, y, val z);
  output declassify z to {alice} to alice;
  output declassify z to {bob} to bob;
}

host alice
host bob
assume for <- alice trusts bob
assume for <- bob trusts alice

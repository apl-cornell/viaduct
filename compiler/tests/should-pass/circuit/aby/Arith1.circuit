host alice
host bob

circuit fun <> difference@ArithABY(client = bob, server = alice)(aliceLocal: int[], bobLocal: int[]) -> d: int[] {
  val res[]: int[] = aliceLocal[] - bobLocal[]
  return res
}

fun <> main() -> {
    val aliceLocal@Local(host = alice) = alice.input<int[]>()
    val bobLocal@Local(host = bob) = bob.input<int[]>()
    val clearDiff@Replication(hosts = {alice, bob}) = difference<>(aliceLocal, bobLocal)
    val = alice.output<int[]>(clearDiff)
    val = bob.output<int[]>(clearDiff)
    return
}

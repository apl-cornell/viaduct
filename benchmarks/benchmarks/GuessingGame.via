host alice
host bob

fun main() {
  val number: int{bob & alice<-} = endorse (input int from bob) to {bob & alice<-} from {bob};
  var tries: int{alice ⊓ bob} = 0;
  var win: bool{alice ⊓ bob} = false;
  while (tries < 5 && !win) {
    val guess: int{(alice|bob)-> & alice<-} = declassify (input int from alice) to {(alice|bob)-> & alice<-};
    val trusted_guess: int{alice ⊓ bob} = endorse guess to {alice ⊓ bob} from {(alice|bob)-> & alice<-};
    win = declassify (number == trusted_guess) to {alice ⊓ bob};
    tries += 1;
  }
  output win to alice;
  output win to bob;
}

/* The classic MPC problem */
process main {
  a : int{A};
  b : int{B};
  b_richer : bool{(A | B)-> & (A & B)<-};

  a <- recv alice_main;
  b <- recv bob_main;

  a_endorsed : int{A & B<-};
  b_endorsed : int{B & A<-};

  a_endorsed = endorse(a, {A & B<-});
  b_endorsed = endorse(b, {B & A<-});

  b_richer = declassify(a_endorsed <= b_endorsed, {(A | B)-> & (A & B)<-});
  assert b_richer;
}

process alice_main {
  send 20 to main;
}

process bob_main {
  send 40 to main;
}

host alice : {A};
host bob : {B};

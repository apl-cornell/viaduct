host alice : {A}
host bob   : {B}

fun main() {
  val number: int{B & A<-} = endorse (input int from bob) to {B & A<-} from {B};
  var tries: int{A ⊓ B} = 0;
  var win: bool{A ⊓ B} = false;
  while (tries < 5 && !win) {
    val guess: int{(A|B)-> & A<-} = declassify (input int from alice) to {(A|B)-> & A<-};
    val trusted_guess: int{A ⊓ B} = endorse guess to {A ⊓ B} from {(A|B)-> & A<-};
    win = declassify (number == trusted_guess) to {A ⊓ B};
    tries += 1;
  }
  output win to alice;
  output win to bob;
}

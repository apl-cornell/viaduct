process main {
  /* Chuck hides the ball under a shell; Alice guesses the shell. */
  int{C} cin <- recv @chuck;
  int{A} ain <- recv @alice;

  /* Alice and Chuck can select their inputs however; they are trusted implicitly. */
  int{C & A<-} shell = endorse(cin, {C & A<-});
  int{A & C<-} guess = endorse(ain, {A & C<-});

  bool{A & C} win_secret;

  /* Chuck must prove that `shell` is valid without revealing its value. */
  if (declassify(1 <= shell && shell <= 3, {A ⊓ C})) {
    win_secret = shell == guess;
  } else {
    win_secret = true;
  }

  bool{A ⊓ C} win = declassify(win_secret, { A ⊓ C });
  send win to @alice;
  send win to @chuck;
}

process @alice {
  send 2 to main;
  bool alice_wins <- recv main;
}

process @chuck {
  send 1 to main;
  bool alice_wins <- recv main;
  assert !alice_wins;
}

/* Declare the actual machines (i.e. hosts) we have. */
host alice : {A};
host chuck : {C};

/* Parser test. Try to hit all syntactic forms. */
process main {
  int a;
  bool{B} b;

  int{A} a2 = (22 - 1) * 2;
  bool b2 = true || false;

  assert a2 == 42;
  assert b2;

  a = -a2;
  b = !b2;

  assert a == -42;
  assert !b;

  /* Check that variables in blocks go out of scope */
  {
    int{C} tmp = 5;
  }
  bool{A & B->} tmp = a2 > a;
  assert tmp;

  /* Communication */
  int tmp1;
  tmp1 <- recv @alice;
  bool tmp2 <- recv @alice;
  assert tmp1 == 5;
  assert !tmp2;

  send 42 to @alice;
}

host alice : {A};

process @alice {
  send 5 to main;
  send false to main;
  int result <- recv main;
  assert result == 42;
}

host trusted : {A & B & C};

process main {
    val length: int = 100;

    val a = Array[int]{A & B<-}(length);
    for (var i : int = 0; i < length; i += 1) {
        a[i] = input int from alice;
    }

    val b = Array[int]{B & A<-}(length);
    for (var i : int = 0; i < length; i += 1) {
        b[i] = input int from bob;
    }

    var a_sum : int{A & B<-} = 0;
    for (var i : int = 0; i < length; i += 1) {
        a_sum += a[i] * a[i];
    }

    var b_sum : int{B & A<-} = 0;
    for (var i : int = 0; i < length; i += 1) {
        b_sum += b[i] * b[i];
    }

    val sqsums : int = a_sum + b_sum;
    val result : int = declassify (sqsums / 2) to {A âŠ“ B};

    output result to alice;
    output result to bob;
}

host alice  : {A & B<-}
host bob    : {B & A<-}

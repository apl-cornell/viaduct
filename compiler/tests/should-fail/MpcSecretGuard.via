/* NoSelectionSolutionError */

fun main() {
  /* Chuck hides the ball under a shell; Alice guesses the shell. */
  val shell: int = endorse (input int from chuck) to {C & A<-} from {C};
  val guess: int = endorse (input int from alice) to {A & C<-} from {A};

  var win_secret: bool{A & C};
  var nice: bool{A & C};

  /* Cannot compute conditional guard in MPC because of the loop in the else branch. */
  /* Chuck must prove that `shell` is valid without revealing its value. */
  if (1 <= shell && shell <= 3 && guess + shell <= 10) {
    win_secret = shell == guess;
  } else {
    win_secret = true;
    while (true) { nice = true; }
  }

  val win: bool{A ⊓ C} = declassify win_secret to {A ⊓ C};
  output win to alice;
  output win to chuck;
}

host alice : {A}
host chuck : {C}

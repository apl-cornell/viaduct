
process main {
    num : int{A};
    num = 100;

    arr[100]    : int{A};
    tmp[100]    : int{A};

    left        : int{B};
    rstart      : int{B};
    rend        : int{B};
    i           : int{B};
    j           : int{B};
    k           : int{B};
    m           : int{B};

    /* sort adjacent windows for increasing window sizes */
    for (k = 1; k < 100; k = k*2) {
        /* iterate through all windows for a particular size */
        for (left = 0; left+k < num; left += k*2 ) {
            rstart = left + k;
            rend = rstart + k;

            if (rend > num) {
                rend = num;
            }

            m = left;
            i = left;
            j = rstart;

            /* merge adjacent windows */
            while (i < rstart && j < rend) {
                if (arr[i] <= arr[j]) {
                    tmp[m] = arr[i];
                    i++;

                } else {
                    tmp[m] = arr[j];
                    j++;
                }
                m++;
            }

            /* append the rest of the left to the end */
            while (i < rstart) {
                tmp[m] = arr[i];
                i++; m++;
            }

            /* append the rest of the right to the end */
            while (j < rend) {
                tmp[m] = arr[j];
                j++; m++;
            }

            /* transfer sorted sublist from temporary to the actual array */
            for (m = left; m < rend; m++) {
                arr[m] = tmp[m];
            }
        }
    }
}

host alice  : {A};
host bob    : {B};

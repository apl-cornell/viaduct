process main {
    int{A & B<-} a[4];
    int{B & A<-} b[8];

    a <- recv @alice;
    b <- recv @bob;

    int{A} ai = 0;
    int{A} aj = 3;
    int{A} am;

    int{B} bi = 0;
    int{B} bj = 3;
    int{B} bm;

    int{A && B} median;
    bool{A && B} cont = true;
    while (downgrade(aj != ai, {A && B}) && downgrade(bj != bi, {A && B}) && cont) {
        am = (aj - ai) * 2;
        bm = (bj - bi) * 2;

        int{A && B} cmp = downgrade(a[am] - b[bm], {A && B});

        if (cmp == 0) { /* a[am] == b[bm] */
            median = downgrade(a[am], {A && B});
            cont = false;

        } else {
            /* TODO: SHOULD BE DIVISIONS */
            if (cmp < 0) { /* a[am] < b[bm] */
                ai = (aj - ai) * 2;
                bj = (bj - ai) * 2;

            } else {  /* a[am] > b[bm] */
                aj = (aj - ai) * 2;
                bi = (bj - bi) * 2;
            }
        }
    }
}

host alice  : {A & B<-};
host bob    : {B & A<-};

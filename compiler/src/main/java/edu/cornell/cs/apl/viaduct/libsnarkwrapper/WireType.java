/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.cornell.cs.apl.viaduct.libsnarkwrapper;

public final class WireType {
  public static final WireType WIRE_IN = new WireType("WIRE_IN");
  public static final WireType WIRE_DUMMY_IN = new WireType("WIRE_DUMMY_IN");
  public static final WireType WIRE_PUBLIC_IN = new WireType("WIRE_PUBLIC_IN");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static WireType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length
        && swigValue >= 0
        && swigValues[swigValue].swigValue == swigValue) return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue) return swigValues[i];
    throw new IllegalArgumentException("No enum " + WireType.class + " with value " + swigValue);
  }

  private WireType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private WireType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue + 1;
  }

  private WireType(String swigName, WireType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue + 1;
  }

  private static WireType[] swigValues = {WIRE_IN, WIRE_DUMMY_IN, WIRE_PUBLIC_IN};
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

fun f{X, Z}(a: int{X}, b: int{bob}, c: out int{Z}) where (X <: alice, alice ⊔ bob <: Z) : {⊥} {
  g(a, val ga);
  g(b, val gb);
  out c = ga + gb;
}

fun g{X}(a: int{X}, c: out int{X}) : {X} {
  out c = a + a;
}

fun main() {
  val x : int{alice} = input int from alice;
  val y : int{bob} = input int from bob;
  f(x, y, val z);
}

host alice
host bob

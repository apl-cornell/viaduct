/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.cornell.cs.apl.viaduct.libsnarkwrapper;

public class R1CS {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected R1CS(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(R1CS obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libsnarkwrapperJNI.delete_R1CS(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setWires(WireInfoVector value) {
    libsnarkwrapperJNI.R1CS_wires_set(swigCPtr, this, WireInfoVector.getCPtr(value), value);
  }

  public WireInfoVector getWires() {
    long cPtr = libsnarkwrapperJNI.R1CS_wires_get(swigCPtr, this);
    return (cPtr == 0) ? null : new WireInfoVector(cPtr, false);
  }

  public void setConstraints(ConstraintVector value) {
    libsnarkwrapperJNI.R1CS_constraints_set(swigCPtr, this, ConstraintVector.getCPtr(value), value);
  }

  public ConstraintVector getConstraints() {
    long cPtr = libsnarkwrapperJNI.R1CS_constraints_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ConstraintVector(cPtr, false);
  }

  public void setPrimary_input(
      SWIGTYPE_p_std__vectorT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t value) {
    libsnarkwrapperJNI.R1CS_primary_input_set(
        swigCPtr,
        this,
        SWIGTYPE_p_std__vectorT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t
      getPrimary_input() {
    long cPtr = libsnarkwrapperJNI.R1CS_primary_input_get(swigCPtr, this);
    return (cPtr == 0)
        ? null
        : new SWIGTYPE_p_std__vectorT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t(
            cPtr, false);
  }

  public void setAux_input(
      SWIGTYPE_p_std__vectorT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t value) {
    libsnarkwrapperJNI.R1CS_aux_input_set(
        swigCPtr,
        this,
        SWIGTYPE_p_std__vectorT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t getAux_input() {
    long cPtr = libsnarkwrapperJNI.R1CS_aux_input_get(swigCPtr, this);
    return (cPtr == 0)
        ? null
        : new SWIGTYPE_p_std__vectorT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t(
            cPtr, false);
  }

  public void setCS(
      SWIGTYPE_p_libsnark__r1cs_constraint_systemT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t
          value) {
    libsnarkwrapperJNI.R1CS_CS_set(
        swigCPtr,
        this,
        SWIGTYPE_p_libsnark__r1cs_constraint_systemT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t
            .getCPtr(value));
  }

  public
  SWIGTYPE_p_libsnark__r1cs_constraint_systemT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t
      getCS() {
    return new SWIGTYPE_p_libsnark__r1cs_constraint_systemT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t(
        libsnarkwrapperJNI.R1CS_CS_get(swigCPtr, this), true);
  }

  public void setInitialized(boolean value) {
    libsnarkwrapperJNI.R1CS_initialized_set(swigCPtr, this, value);
  }

  public boolean getInitialized() {
    return libsnarkwrapperJNI.R1CS_initialized_get(swigCPtr, this);
  }

  public int mkWire(WireInfo info) {
    return libsnarkwrapperJNI.R1CS_mkWire(swigCPtr, this, WireInfo.getCPtr(info), info);
  }

  public void addConstraint(Constraint c) {
    libsnarkwrapperJNI.R1CS_addConstraint(swigCPtr, this, Constraint.getCPtr(c), c);
  }

  public void reportConstraintSystem(
      SWIGTYPE_p_libsnark__r1cs_constraint_systemT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t
          cs) {
    libsnarkwrapperJNI.R1CS_reportConstraintSystem(
        swigCPtr,
        this,
        SWIGTYPE_p_libsnark__r1cs_constraint_systemT_libff__FrT_libsnark__default_r1cs_ppzksnark_pp_t_t
            .getCPtr(cs));
  }

  public ByteBuf generateProof(ByteBuf provingKey) {
    return new ByteBuf(
        libsnarkwrapperJNI.R1CS_generateProof(
            swigCPtr, this, ByteBuf.getCPtr(provingKey), provingKey),
        true);
  }

  public boolean verifyProof(ByteBuf verificationKey, ByteBuf proof) {
    return libsnarkwrapperJNI.R1CS_verifyProof(
        swigCPtr,
        this,
        ByteBuf.getCPtr(verificationKey),
        verificationKey,
        ByteBuf.getCPtr(proof),
        proof);
  }

  public void initConstraintSystem() {
    libsnarkwrapperJNI.R1CS_initConstraintSystem(swigCPtr, this);
  }

  public Keypair genKeypair() {
    return new Keypair(libsnarkwrapperJNI.R1CS_genKeypair(swigCPtr, this), true);
  }

  public R1CS() {
    this(libsnarkwrapperJNI.new_R1CS(), true);
  }
}
